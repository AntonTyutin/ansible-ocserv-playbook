global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

{% for key, value in haproxy_config_env %}
	setenv {{ key }} {{ value }}
{% endfor %}
{% if haproxy_config_acme_challenge_account_thumbprint %}
	setenv ACCOUNT_THUMBPRINT {{ haproxy_config_acme_challenge_account_thumbprint }}
{% endif %}

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

	resolvers mydns
		nameserver cloudflare 1.1.1.1:53
		nameserver google 8.8.8.8:53
		hold valid 10s

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	timeout connect 10s
	timeout client  1m
	timeout server  1m
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend tls-routing
	bind :443
	mode tcp
	timeout client  1210s
	tcp-request inspect-delay 5s
	tcp-request content accept if { req.ssl_hello_type 1 }

{% for backend in haproxy_config_routes_tcp %}
	use_backend {{ backend.name }} if {{ backend.if }}
{% endfor %}

	default_backend web-redirect

backend web-redirect
	mode tcp
	server loopback-for-tls abns@haproxy-web-tls send-proxy-v2
{% for backend in haproxy_config_routes_tcp %}

backend {{ backend.name }}
	mode tcp
	option ssl-hello-chk
	server {{ backend.name }} {{ backend.address}}:{{ backend.port | default("443") }} send-proxy-v2
{% endfor %}

frontend web
	bind :80
	timeout client  1m
{% if haproxy_config_acme_challenge_account_thumbprint %}

	# ssl certs renewal
	http-request return status 200 content-type text/plain lf-string "%[path,field(-1,/)].${ACCOUNT_THUMBPRINT}\n" if { path_beg '/.well-known/acme-challenge/' }
{% endif %}

	http-request redirect scheme https unless { ssl_fc }

frontend web-tls
	bind abns@haproxy-web-tls accept-proxy ssl crt-list {{ haproxy_config_crt_list_file }} ssl-min-ver TLSv1.2 strict-sni
	timeout client  1m

{% for backend in haproxy_config_routes_web %}
	use_backend {{ backend.name }} if {{ backend.if }}
{% endfor %}
{% for backend in haproxy_config_routes_web %}

backend {{ backend.name }}
	server {{ backend.name }} {{ backend.address }}:{{ backend.port | default("80") }} check
{% endfor %}

